/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pasatiempos;

import javax.swing.JOptionPane;

/**
 *
 * @author LABIAALAP1
 */
public class Personas extends javax.swing.JFrame {
    private ManejadorBD manejadorBD;

    /**
     * Creates new form Persona2
     */
    public Personas() {
        initComponents();
        manejadorBD = new ManejadorBD();
    	manejadorBD.conectarMySQL8("localhost", "pasatiempos", "root", "root", 3307);
        muestraVentana("persona", "");
    }
    
    private void muestraVentana(String tabla, String condicion) {
        if(condicion != null && !condicion.equals("")) {
            if(manejadorBD.consultaRegistros(tabla, condicion) != 0) {
                muestraRegistroActual();
                botonEditar.setEnabled(true);
                botonBorrar.setEnabled(true);
                cambiaActivacionBotonesNavegacionRegistros(true);
            }
    	}
        else if(manejadorBD.consultaRegistros(tabla) != 0) {
            muestraRegistroActual();
            botonEditar.setEnabled(true);
            botonBorrar.setEnabled(true);
            cambiaActivacionBotonesNavegacionRegistros(true);
    	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etiquetaSuperior = new javax.swing.JLabel();
        etiquetaFechaNacimiento = new javax.swing.JLabel();
        botonSiguiente = new javax.swing.JButton();
        campoTextoFechaNacimiento = new javax.swing.JTextField();
        botonAnterior = new javax.swing.JButton();
        etiquetaSexo = new javax.swing.JLabel();
        botonUltima = new javax.swing.JButton();
        campoTextoSexo = new javax.swing.JTextField();
        botonNueva = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        botonEditar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();
        etiquetaIdPersona = new javax.swing.JLabel();
        campoTextoIdPersona = new javax.swing.JTextField();
        etiquetaApellidoPaterno = new javax.swing.JLabel();
        campoTextoApellidoPaterno = new javax.swing.JTextField();
        etiquetaNombres = new javax.swing.JLabel();
        campoTextoNombres = new javax.swing.JTextField();
        etiquetaApellidoMaterno = new javax.swing.JLabel();
        botonActualizar = new javax.swing.JButton();
        campoTextoApellidoMaterno = new javax.swing.JTextField();
        botonPrimera = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administración de Personas");

        etiquetaSuperior.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        etiquetaSuperior.setForeground(java.awt.Color.blue);
        etiquetaSuperior.setText("Datos de las Personas");

        etiquetaFechaNacimiento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        etiquetaFechaNacimiento.setText("Fecha de nacimiento:");

        botonSiguiente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoSiguienteRegistro.png"))); // NOI18N
        botonSiguiente.setMnemonic('S');
        botonSiguiente.setText("Siguiente");
        botonSiguiente.setToolTipText("Ver siguiente registro de una persona");
        botonSiguiente.setEnabled(false);
        botonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSiguienteActionPerformed(evt);
            }
        });

        campoTextoFechaNacimiento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        campoTextoFechaNacimiento.setEnabled(false);

        botonAnterior.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoAnteriorRegistro.png"))); // NOI18N
        botonAnterior.setMnemonic('n');
        botonAnterior.setText("Anterior");
        botonAnterior.setToolTipText("Ver anterior registro de una persona");
        botonAnterior.setEnabled(false);
        botonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnteriorActionPerformed(evt);
            }
        });

        etiquetaSexo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        etiquetaSexo.setText("Sexo:");

        botonUltima.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonUltima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoUltimoRegistro.png"))); // NOI18N
        botonUltima.setMnemonic('\u00da');
        botonUltima.setText("Última");
        botonUltima.setToolTipText("Ver último registro de una persona");
        botonUltima.setEnabled(false);
        botonUltima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUltimaActionPerformed(evt);
            }
        });

        campoTextoSexo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        campoTextoSexo.setEnabled(false);

        botonNueva.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonNueva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoNuevoRegistro.png"))); // NOI18N
        botonNueva.setMnemonic('N');
        botonNueva.setText("Nueva");
        botonNueva.setToolTipText("Activar edición de un registro nuevo de una persona");
        botonNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaActionPerformed(evt);
            }
        });

        botonGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoGuardarRegistro.png"))); // NOI18N
        botonGuardar.setMnemonic('G');
        botonGuardar.setText("Guardar");
        botonGuardar.setToolTipText("Guarda un registro nuevo de una persona");
        botonGuardar.setEnabled(false);
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonEditar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoEditarRegistro.png"))); // NOI18N
        botonEditar.setMnemonic('E');
        botonEditar.setText("Editar");
        botonEditar.setToolTipText("Activar edición del registro actual de persona");
        botonEditar.setEnabled(false);
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });

        botonCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoCancelarEdicion.png"))); // NOI18N
        botonCancelar.setMnemonic('C');
        botonCancelar.setText("Cancelar");
        botonCancelar.setToolTipText("Cancelar edición del registro actual de una persona");
        botonCancelar.setEnabled(false);
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        botonBorrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoBorrarRegistro.png"))); // NOI18N
        botonBorrar.setMnemonic('B');
        botonBorrar.setText("Borrar");
        botonBorrar.setToolTipText("Borrar registro actual de una persona");
        botonBorrar.setEnabled(false);
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        etiquetaIdPersona.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        etiquetaIdPersona.setText("Id:");

        campoTextoIdPersona.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        campoTextoIdPersona.setEnabled(false);

        etiquetaApellidoPaterno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        etiquetaApellidoPaterno.setText("Apellido paterno:");

        campoTextoApellidoPaterno.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        campoTextoApellidoPaterno.setEnabled(false);

        etiquetaNombres.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        etiquetaNombres.setText("Nombre(s):");

        campoTextoNombres.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        campoTextoNombres.setEnabled(false);

        etiquetaApellidoMaterno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        etiquetaApellidoMaterno.setText("Apellido materno:");

        botonActualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoActualizarRegistro.png"))); // NOI18N
        botonActualizar.setMnemonic('A');
        botonActualizar.setText("Actualizar");
        botonActualizar.setToolTipText("Actualizar registro actual de una persona");
        botonActualizar.setEnabled(false);
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });

        campoTextoApellidoMaterno.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        campoTextoApellidoMaterno.setEnabled(false);

        botonPrimera.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonPrimera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoPrimerRegistro.png"))); // NOI18N
        botonPrimera.setMnemonic('P');
        botonPrimera.setText("Primera");
        botonPrimera.setToolTipText("Ver primer registro de una persona");
        botonPrimera.setEnabled(false);
        botonPrimera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPrimeraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiquetaFechaNacimiento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoTextoFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etiquetaSexo)
                        .addGap(8, 8, 8)
                        .addComponent(campoTextoSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(botonNueva)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonBorrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonActualizar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(etiquetaApellidoMaterno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoTextoApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiquetaApellidoPaterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(campoTextoApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(389, 389, 389))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiquetaIdPersona)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoTextoIdPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etiquetaNombres)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoTextoNombres)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(etiquetaSuperior)
                                .addGap(241, 241, 241)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(100, 100, 100)
                    .addComponent(botonPrimera)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(botonAnterior)
                    .addGap(14, 14, 14)
                    .addComponent(botonSiguiente)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(botonUltima)
                    .addContainerGap(152, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(etiquetaSuperior)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(etiquetaIdPersona))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campoTextoIdPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(etiquetaNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(campoTextoNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaApellidoPaterno)
                    .addComponent(campoTextoApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campoTextoApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(etiquetaApellidoMaterno)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaFechaNacimiento)
                    .addComponent(campoTextoFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaSexo)
                    .addComponent(campoTextoSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonNueva)
                    .addComponent(botonGuardar)
                    .addComponent(botonEditar)
                    .addComponent(botonCancelar)
                    .addComponent(botonBorrar)
                    .addComponent(botonActualizar))
                .addGap(61, 61, 61))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(225, 225, 225)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonPrimera)
                        .addComponent(botonSiguiente)
                        .addComponent(botonUltima)
                        .addComponent(botonAnterior))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSiguienteActionPerformed
        siguienteRegistro();
    }//GEN-LAST:event_botonSiguienteActionPerformed

    private void botonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnteriorActionPerformed
        anteriorRegistro();
    }//GEN-LAST:event_botonAnteriorActionPerformed

    private void botonUltimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUltimaActionPerformed
        ultimoRegistro();
    }//GEN-LAST:event_botonUltimaActionPerformed

    private void botonNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaActionPerformed
        nuevoRegistro();
        cambiaActivacionBotonesNavegacionRegistros(false);
        botonNueva.setEnabled(false);
        botonEditar.setEnabled(false);
        botonGuardar.setEnabled(true);
        botonBorrar.setEnabled(false);
        botonCancelar.setEnabled(true);
    }//GEN-LAST:event_botonNuevaActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        if(validaCampos()) {
            manejadorBD.iniciarBloque("persona");
            insertaRegistro();
            manejadorBD.cerrarBloque();
            JOptionPane.showMessageDialog(this, "Los datos de la Persona han sido guardados.");
            manejadorBD.consultaRegistros("persona");
            cambiaActivacionBotonesNavegacionRegistros(true);
            botonNueva.setEnabled(true);
            botonGuardar.setEnabled(false);
            botonEditar.setEnabled(true);
            botonCancelar.setEnabled(false);
            botonBorrar.setEnabled(true);
        }
        else {
            JOptionPane.showMessageDialog(this,
                "No se pueden guardar los datos de la Persona.",
                "Error al guardar los datos de la Persona",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this,
            "¿Desea eliminar el registro de la Persona?",
            "Confirme su respuesta",
            JOptionPane.YES_NO_OPTION);
        if(respuesta == 0) {
            manejadorBD.borraRegistroActual();
            siguienteRegistro();
        }
        else {
            JOptionPane.showMessageDialog(this, "Se canceló la eliminación del registro de la Persona.");
        }
    }//GEN-LAST:event_botonBorrarActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this,
            "¿Desea actualizar el registro de la Persona?",
            "Confirme su respuesta",
            JOptionPane.YES_NO_OPTION);
        if(respuesta == 0) {
            insertaRegistro();
            manejadorBD.actualizaRegistroActual();
            botonCancelar.setEnabled(false);
            botonActualizar.setEnabled(false);
            botonEditar.setEnabled(true);
            botonBorrar.setEnabled(true);
            botonNueva.setEnabled(true);
            cambiaActivacionBotonesNavegacionRegistros(true);
        }
        else {
            JOptionPane.showMessageDialog(this, "Se canceló la actualización del registro de la Persona.");
        }   
    }//GEN-LAST:event_botonActualizarActionPerformed

    private void botonPrimeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPrimeraActionPerformed
        primerRegistro();
    }//GEN-LAST:event_botonPrimeraActionPerformed

    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        cambiaActivacionCamposTexto(true);
        botonNueva.setEnabled(false);
        botonBorrar.setEnabled(false);
        botonEditar.setEnabled(false);
        botonCancelar.setEnabled(true);
        botonActualizar.setEnabled(true);
        cambiaActivacionBotonesNavegacionRegistros(false);
    }//GEN-LAST:event_botonEditarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        cambiaActivacionCamposTexto(false);
        muestraRegistroActual();        
    }//GEN-LAST:event_botonCancelarActionPerformed
   
    private void cambiaActivacionBotonesNavegacionRegistros(boolean estado) {
        botonPrimera.setEnabled(estado);
        botonSiguiente.setEnabled(estado);
        botonAnterior.setEnabled(estado);
        botonUltima.setEnabled(estado);
    } 
    
    private boolean validaCampos() {
        boolean correcto = true;
        try {
            Integer.parseInt(campoTextoIdPersona.getText());                    
        } catch(NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this,
                    "Se debe introducir un valor entero para el Id de la Persona.",
                    "Error en el campo Id persona",
                    JOptionPane.ERROR_MESSAGE);
            correcto = false;
        }
        if(correcto) {
            if(campoTextoNombres.getText().equals("")) {
                JOptionPane.showMessageDialog(this,
                    "Se deben introducir los nombres de la Persona.",
                    "Error en el campo nombres",
                    JOptionPane.ERROR_MESSAGE);
                correcto = false;
            }
        }
        if(correcto) {
            if(campoTextoApellidoPaterno.getText().equals("")) {
                JOptionPane.showMessageDialog(this,
                    "Se debe introducir el apellido paterno de la Persona.",
                    "Error en el campo Apellido paterno",
                    JOptionPane.ERROR_MESSAGE);
                correcto = false;
            }
        }
        if(correcto) {
            if(campoTextoApellidoMaterno.getText().equals("")) {
                JOptionPane.showMessageDialog(this,
                    "Se debe introducir el apellido materno de la Persona.",
                    "Error en el campo Apellido materno",
                    JOptionPane.ERROR_MESSAGE);
                correcto = false;
            }
        }
        if(correcto) {
            if(campoTextoFechaNacimiento.getText().equals("")) {
                JOptionPane.showMessageDialog(this,
                    "Se debe introducir la fecha de nacimiento de la Persona.",
                    "Error en el campo Fecha de nacimiento",
                    JOptionPane.ERROR_MESSAGE);
                correcto = false;
            }
        }
        if(correcto) {
            if(campoTextoSexo.getText().equals("")) {
                JOptionPane.showMessageDialog(this,
                    "Se debe introducir el sexo de la Persona.",
                    "Error en el campo Sexo",
                    JOptionPane.ERROR_MESSAGE);
                correcto = false;
            }
        }
        return correcto;
    }
    
    private void insertaRegistro(){
        cambiaActivacionCamposTexto(false);
        manejadorBD.insertarCampo("idPersona", campoTextoIdPersona.getText());
        manejadorBD.insertarCampo("nombres", campoTextoNombres.getText());
        manejadorBD.insertarCampo("apellidoPaterno", campoTextoApellidoPaterno.getText());
        manejadorBD.insertarCampo("apellidoMaterno", campoTextoApellidoMaterno.getText());
        manejadorBD.insertarCampo("fechaNacimiento", campoTextoFechaNacimiento.getText());
        manejadorBD.insertarCampo("sexo", campoTextoSexo.getText());
    }
    
    private void muestraRegistroActual() {
    	if(manejadorBD.indiceActual() != 0) {
            manejadorBD.refrescaRegistroActual();
            campoTextoIdPersona.setText(manejadorBD.getCampoRegistroActual("idPersona").toString());
            campoTextoNombres.setText(manejadorBD.getCampoRegistroActual("nombres").toString());
            campoTextoApellidoPaterno.setText(manejadorBD.getCampoRegistroActual("apellidoPaterno").toString());
            campoTextoApellidoMaterno.setText(manejadorBD.getCampoRegistroActual("apellidoMaterno").toString());
            campoTextoFechaNacimiento.setText(manejadorBD.getCampoRegistroActual("fechaNacimiento").toString());
            campoTextoSexo.setText(manejadorBD.getCampoRegistroActual("sexo").toString());
            botonNueva.setEnabled(true);
            botonEditar.setEnabled(true);
            botonCancelar.setEnabled(false);
            botonBorrar.setEnabled(true);
            botonGuardar.setEnabled(false);
            botonActualizar.setEnabled(false);
            cambiaActivacionBotonesNavegacionRegistros(true);
        }
    	else {
            borraEntradasCamposTexto();
            botonNueva.setEnabled(true);
            botonEditar.setEnabled(false);
            botonBorrar.setEnabled(false);
            botonCancelar.setEnabled(false);
            botonGuardar.setEnabled(false);            
            cambiaActivacionBotonesNavegacionRegistros(false);
    	}
    }
    
    private void cambiaActivacionCamposTexto(boolean estado) {
        campoTextoIdPersona.setEnabled(estado);
        campoTextoNombres.setEnabled(estado);
        campoTextoApellidoPaterno.setEnabled(estado);
        campoTextoApellidoMaterno.setEnabled(estado);
        campoTextoFechaNacimiento.setEnabled(estado);
        campoTextoSexo.setEnabled(estado);
    }
    
    private void borraEntradasCamposTexto() {
        campoTextoIdPersona.setText("");        
        campoTextoNombres.setText("");        
        campoTextoApellidoPaterno.setText("");        
        campoTextoApellidoMaterno.setText("");
        campoTextoFechaNacimiento.setText("");
        campoTextoSexo.setText("");
    }
    
    private void nuevoRegistro() {
        borraEntradasCamposTexto();
        cambiaActivacionCamposTexto(true);
    }
    
    private void primerRegistro() {
    	manejadorBD.veAlPrimerRegistro();
    	muestraRegistroActual();
    }

    private void ultimoRegistro() {
    	manejadorBD.veAlUltimoRegistro();
    	muestraRegistroActual();
    }

    private void siguienteRegistro() {
    	manejadorBD.veAlSiguienteRegistro();
    	muestraRegistroActual();
    }

    private void anteriorRegistro() {
    	manejadorBD.veAlAnteriorRegistro();
    	muestraRegistroActual();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonAnterior;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonNueva;
    private javax.swing.JButton botonPrimera;
    private javax.swing.JButton botonSiguiente;
    private javax.swing.JButton botonUltima;
    private javax.swing.JTextField campoTextoApellidoMaterno;
    private javax.swing.JTextField campoTextoApellidoPaterno;
    private javax.swing.JTextField campoTextoFechaNacimiento;
    private javax.swing.JTextField campoTextoIdPersona;
    private javax.swing.JTextField campoTextoNombres;
    private javax.swing.JTextField campoTextoSexo;
    private javax.swing.JLabel etiquetaApellidoMaterno;
    private javax.swing.JLabel etiquetaApellidoPaterno;
    private javax.swing.JLabel etiquetaFechaNacimiento;
    private javax.swing.JLabel etiquetaIdPersona;
    private javax.swing.JLabel etiquetaNombres;
    private javax.swing.JLabel etiquetaSexo;
    private javax.swing.JLabel etiquetaSuperior;
    // End of variables declaration//GEN-END:variables
}
